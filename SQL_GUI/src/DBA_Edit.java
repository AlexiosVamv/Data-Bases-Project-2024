
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class DBA_Edit extends javax.swing.JFrame {
   String DB_URL = SQL_GUI.DB_URL ;
   String username = SQL_GUI.USERNAME;
   String password = SQL_GUI.PASSWORD;
    private int deleteItem;
    /**
     * Creates new form DBA_Edit
     */
    public DBA_Edit() {
        initComponents();
        UpdateDB();
        setLocationRelativeTo(null);
    }
    
    public  void UpdateDB() {
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);
            
            PreparedStatement stmnt = con.prepareStatement("SELECT * FROM DataBaseAdmin");
            
            ResultSet resultSet = stmnt.executeQuery();
            
            ResultSetMetaData metadata = resultSet.getMetaData();
            int numberOfColumns = metadata.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)dba_table.getModel();
                    RecordTable.setRowCount(0);
                    
             while (resultSet.next()){
                 
             Vector columnData = new Vector();
                for (int i = 1; i <= numberOfColumns; i++){
                    
                    columnData.add(resultSet.getString("dba_username"));
                    columnData.add(resultSet.getString("dba_password"));
                    columnData.add(resultSet.getDate("start_date"));
                    columnData.add(resultSet.getString("end_date"));
                    
                    
                }                 
                RecordTable.addRow(columnData);
             }
       
        }catch (Exception ex) {
             JOptionPane.showMessageDialog(null, ex);
        }
     } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dba_password = new javax.swing.JTextField();
        btnEvaluator_back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnEvaluator_Update = new javax.swing.JButton();
        btnEvaluator_Insert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnEvaluator_Reset = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dba_table = new javax.swing.JTable();
        dba_username = new javax.swing.JTextField();
        btnEvaluator_Delete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        startdate = new com.toedter.calendar.JDateChooser();
        enddate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dba_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnEvaluator_back.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_back.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_back.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_back.setText("‚Üê Back");
        btnEvaluator_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Username :");

        btnEvaluator_Update.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Update.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Update.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Update.setText("Update");
        btnEvaluator_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_UpdateActionPerformed(evt);
            }
        });

        btnEvaluator_Insert.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Insert.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Insert.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Insert.setText("Insert");
        btnEvaluator_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_InsertActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Password :");

        btnEvaluator_Reset.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Reset.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Reset.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Reset.setText("Reset");
        btnEvaluator_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_ResetActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("DataBaseAdmins");

        dba_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dba_table.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        dba_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Start Date", "End Date"
            }
        ));
        dba_table.setSelectionBackground(new java.awt.Color(255, 255, 255));
        dba_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dba_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dba_table);

        dba_username.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        dba_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dba_usernameActionPerformed(evt);
            }
        });

        btnEvaluator_Delete.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Delete.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Delete.setText("Delete");
        btnEvaluator_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_DeleteActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("End Date :");

        startdate.setDateFormatString("yyyy-MM-dd");
        startdate.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                startdateComponentAdded(evt);
            }
        });

        enddate.setDateFormatString("yyyy-MM-dd");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Start Date :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEvaluator_Insert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEvaluator_Update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEvaluator_Delete))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnEvaluator_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dba_password, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                            .addComponent(dba_username)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(startdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(enddate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(6, 6, 6)))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEvaluator_back))
                        .addGap(49, 49, 49))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dba_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dba_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(enddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addComponent(btnEvaluator_Reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEvaluator_Delete)
                            .addComponent(btnEvaluator_Update)
                            .addComponent(btnEvaluator_Insert)
                            .addComponent(btnEvaluator_back))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEvaluator_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_backActionPerformed
        this.setVisible(false);
        new Table_Select().toFront();
        new Table_Select().setVisible(true);
        new Table_Select().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_btnEvaluator_backActionPerformed

    private void btnEvaluator_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_UpdateActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String start_date = sdf.format(startdate.getDate());
            String end_date = sdf.format(enddate.getDate());
            PreparedStatement stmnt = con.prepareStatement("UPDATE DataBaseAdmin SET   dba_password = ?,start_date = ?,end_date = ? where dba_username = ?");

            
            stmnt.setString(1,dba_password.getText());
            stmnt.setString(2,start_date);
            stmnt.setString(3,end_date);
            stmnt.setString(4,dba_username.getText());

            stmnt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Updated");
            UpdateDB();
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }
    }//GEN-LAST:event_btnEvaluator_UpdateActionPerformed

    private void btnEvaluator_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_InsertActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String start_date = sdf.format(startdate.getDate());
            String end_date = sdf.format(enddate.getDate());
            PreparedStatement stmnt = con.prepareStatement("INSERT INTO DataBaseAdmin(dba_username,dba_username,start_date,end_date)value(?,?,?,?)");

            stmnt.setString(1,dba_username.getText());
            stmnt.setString(2,dba_password.getText());
            stmnt.setString(3,start_date);
            stmnt.setString(4,end_date);

            stmnt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Added");
            UpdateDB();
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(null,"DBA entry already exists");
        }catch (SQLException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }
    }//GEN-LAST:event_btnEvaluator_InsertActionPerformed

    private void btnEvaluator_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_ResetActionPerformed

       
        dba_username.setText("");
        dba_password.setText("");
        startdate.setDate(null);
        enddate.setDate(null);
        dba_username.enable();

        
    }//GEN-LAST:event_btnEvaluator_ResetActionPerformed

    private void dba_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dba_tableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)dba_table.getModel();
        int SelectedRows = dba_table.getSelectedRow();
        
        
        dba_username.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        dba_password.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        
            Date start_date;
        try {
            start_date = new SimpleDateFormat("yyyy-MM-dd").parse(RecordTable.getValueAt(SelectedRows, 2).toString());
            startdate.setDate(start_date); 
        } catch (ParseException ex) {
            Logger.getLogger(DBA_Edit.class.getName()).log(Level.SEVERE, null, ex);
        }
            Date end_date;
        try {
        Object dateObject = RecordTable.getValueAt(SelectedRows, 3);

        if (dateObject != null) {
            end_date = new SimpleDateFormat("yyyy-MM-dd").parse((String) dateObject);
            enddate.setDate(end_date);
        } else {
            end_date = null;
            enddate.setDate(null);
        }
        } catch (ParseException ex) {
        ex.printStackTrace();
        }

            dba_username.disable();
    }//GEN-LAST:event_dba_tableMouseClicked

    private void dba_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dba_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dba_usernameActionPerformed

    private void btnEvaluator_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_DeleteActionPerformed
        DefaultTableModel RecordTable = (DefaultTableModel)dba_table.getModel();
        int SelectedRows = dba_table.getSelectedRow();
        int NextRow = SelectedRows + 1;
        int PrevRow = SelectedRows - 1;

        try{

            String usernm;
            usernm = RecordTable.getValueAt(SelectedRows, 0).toString();
            String username2;
            username2 = RecordTable.getValueAt(NextRow, 0).toString();
            
           
            deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this entry ?","Warning!",JOptionPane.YES_NO_OPTION);
            if (deleteItem == JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(DB_URL,username,password);
                PreparedStatement stmnt = con.prepareStatement("DELETE FROM DataBaseAdmin WHERE dba_username = ?");

                stmnt.setString(1, usernm);
                stmnt.executeUpdate();
                JOptionPane.showMessageDialog(this,"Entry Deleted");
                UpdateDB();

                
                dba_username.setText("");
                dba_password.setText("");
                startdate.setDate(null);
                enddate.setDate(null);

            }
           //}
        }  catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Etaireia_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLException ex){
            System.err.println(ex);
        }catch (ArrayIndexOutOfBoundsException e){
             try{
                    String usernm;
                    usernm = RecordTable.getValueAt(SelectedRows, 0).toString();
                    String username2;
                    username2 = RecordTable.getValueAt(PrevRow, 0).toString();
                    
                    deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this entry ?","Warning!",JOptionPane.YES_NO_OPTION);
                if (deleteItem == JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(DB_URL,username,password);
                PreparedStatement stmnt = con.prepareStatement("DELETE FROM DataBaseAdmin WHERE dba_username = ?");

                stmnt.setString(1, username);
                stmnt.executeUpdate();
                JOptionPane.showMessageDialog(this,"Entry Deleted");
                UpdateDB();

                
                dba_username.setText("");
                dba_password.setText("");
                startdate.setDate(null);
                enddate.setDate(null);

            }
             }catch (ArrayIndexOutOfBoundsException ex){
                 JOptionPane.showMessageDialog(null,"You need to have at least one Data Base Admin");
             } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBA_Edit.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(DBA_Edit.class.getName()).log(Level.SEVERE, null, ex);
            } 
        } 
        
           
    }//GEN-LAST:event_btnEvaluator_DeleteActionPerformed

    private void startdateComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_startdateComponentAdded
        
    }//GEN-LAST:event_startdateComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBA_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBA_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBA_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBA_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBA_Edit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEvaluator_Delete;
    private javax.swing.JButton btnEvaluator_Insert;
    private javax.swing.JButton btnEvaluator_Reset;
    private javax.swing.JButton btnEvaluator_Update;
    private javax.swing.JButton btnEvaluator_back;
    private javax.swing.JTextField dba_password;
    private javax.swing.JTable dba_table;
    private javax.swing.JTextField dba_username;
    private com.toedter.calendar.JDateChooser enddate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser startdate;
    // End of variables declaration//GEN-END:variables
}
