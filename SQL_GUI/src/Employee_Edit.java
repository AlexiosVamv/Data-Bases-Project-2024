
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class Employee_Edit extends javax.swing.JFrame {
    String DB_URL = SQL_GUI.DB_URL ;
   String username = SQL_GUI.USERNAME;
   String password = SQL_GUI.PASSWORD;
    private int deleteItem;
    /**
     * Creates new form Employee_Edit
     */
    public Employee_Edit() {
        initComponents();
        UpdateDB();
        UpdateCombo_user();
        setLocationRelativeTo(null);
    }
    
    
    public  void UpdateDB() {
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);
            
            PreparedStatement stmnt = con.prepareStatement("SELECT * FROM employee");
            
            ResultSet resultSet = stmnt.executeQuery();
            
            ResultSetMetaData metadata = resultSet.getMetaData();
            int numberOfColumns = metadata.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Employee_Table.getModel();
                    RecordTable.setRowCount(0);
                    
             while (resultSet.next()){
                 
             Vector columnData = new Vector();
                for (int i = 1; i <= numberOfColumns; i++){
                    columnData.add(resultSet.getString("username"));
                    columnData.add(resultSet.getString("bio"));
                    columnData.add(resultSet.getString("sistatikes"));
                    columnData.add(resultSet.getString("certificates"));
                    
                    
                }                 
                RecordTable.addRow(columnData);
             }
       
        }catch (Exception ex) {
             JOptionPane.showMessageDialog(null, ex);
        }
     } 
    
     public void UpdateCombo_user(){
        String dropdown = "Select * from user";
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);
            PreparedStatement stmnt = con.prepareStatement(dropdown);
            ResultSet rs = stmnt.executeQuery();
            
            while(rs.next()){
                txtEmployee_username.addItem(rs.getString("username"));
            }
            
        }catch (Exception e){
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEvaluator_Delete = new javax.swing.JButton();
        txtEmployee_bio = new javax.swing.JTextField();
        btnEvaluator_back = new javax.swing.JButton();
        txtEmployee_sistatikes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnEvaluator_Insert = new javax.swing.JButton();
        btnEvaluator_Reset = new javax.swing.JButton();
        btnEvaluator_Update = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Employee_Table = new javax.swing.JTable();
        txtEmployee_certificates = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmployee_username = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEvaluator_Delete.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Delete.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Delete.setText("Delete");
        btnEvaluator_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_DeleteActionPerformed(evt);
            }
        });

        txtEmployee_bio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnEvaluator_back.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_back.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_back.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_back.setText("‚Üê Back");
        btnEvaluator_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_backActionPerformed(evt);
            }
        });

        txtEmployee_sistatikes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Username :");

        btnEvaluator_Insert.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Insert.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Insert.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Insert.setText("Insert");
        btnEvaluator_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_InsertActionPerformed(evt);
            }
        });

        btnEvaluator_Reset.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Reset.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Reset.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Reset.setText("Reset");
        btnEvaluator_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_ResetActionPerformed(evt);
            }
        });

        btnEvaluator_Update.setBackground(new java.awt.Color(102, 102, 102));
        btnEvaluator_Update.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnEvaluator_Update.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluator_Update.setText("Update");
        btnEvaluator_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluator_UpdateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Bio :");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Sistatikes :");

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Employee");

        Employee_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Employee_Table.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        Employee_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Bio", "Sistatikes", "Certificates"
            }
        ));
        Employee_Table.setSelectionBackground(new java.awt.Color(255, 255, 255));
        Employee_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Employee_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Employee_Table);

        txtEmployee_certificates.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Certificates :");

        txtEmployee_username.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnEvaluator_Insert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEvaluator_Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEvaluator_Delete))
                    .addComponent(btnEvaluator_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEvaluator_back)
                .addGap(90, 90, 90))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtEmployee_certificates, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtEmployee_sistatikes, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(txtEmployee_bio, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(txtEmployee_username, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(txtEmployee_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmployee_bio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addComponent(txtEmployee_sistatikes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployee_certificates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEvaluator_Reset)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEvaluator_Delete)
                    .addComponent(btnEvaluator_back)
                    .addComponent(btnEvaluator_Update)
                    .addComponent(btnEvaluator_Insert))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEvaluator_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_DeleteActionPerformed
        DefaultTableModel RecordTable = (DefaultTableModel)Employee_Table.getModel();
        int SelectedRows = Employee_Table.getSelectedRow();

        try{

            String usernm;
            usernm = (RecordTable.getValueAt(SelectedRows, 0).toString());

            deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this entry ?","Warning!",JOptionPane.YES_NO_OPTION);
            if (deleteItem == JOptionPane.YES_OPTION){
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(DB_URL,username,password);
                PreparedStatement stmnt = con.prepareStatement("DELETE FROM employee WHERE username = ?");

                stmnt.setString(1, usernm);
                stmnt.executeUpdate();
                JOptionPane.showMessageDialog(this,"Entry Deleted");
                UpdateDB();

                txtEmployee_username.setSelectedItem(null);
                txtEmployee_username.requestFocus();
                txtEmployee_bio.setText("");
                txtEmployee_sistatikes.setText("");
                txtEmployee_certificates.setText("");

            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Employee_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLException ex){
            System.err.println(ex);
        }
    }//GEN-LAST:event_btnEvaluator_DeleteActionPerformed

    private void btnEvaluator_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_backActionPerformed
        this.setVisible(false);
        new Table_Select().toFront();
        new Table_Select().setVisible(true);
        new Table_Select().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_btnEvaluator_backActionPerformed

    private void btnEvaluator_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_InsertActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);

            PreparedStatement stmnt = con.prepareStatement("INSERT INTO employee(username,bio,sistatikes,certificates)value(?,?,?,?)");

            stmnt.setString(1, (String) txtEmployee_username.getSelectedItem());
            stmnt.setString(2,txtEmployee_bio.getText());
            stmnt.setString(3,txtEmployee_sistatikes.getText());
            stmnt.setString(4,txtEmployee_certificates.getText());

            stmnt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Added");
            UpdateDB();
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(null,"Employee entry already exists");
        }catch (SQLException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }
    }//GEN-LAST:event_btnEvaluator_InsertActionPerformed

    private void btnEvaluator_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_ResetActionPerformed

        txtEmployee_username.setSelectedItem(null);
        txtEmployee_bio.setText("");
        txtEmployee_sistatikes.setText("");
        txtEmployee_certificates.setText("");
        
        txtEmployee_username.enable();
    }//GEN-LAST:event_btnEvaluator_ResetActionPerformed

    private void btnEvaluator_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluator_UpdateActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,username,password);

            PreparedStatement stmnt = con.prepareStatement("UPDATE evaluator SET  bio = ?, sistatikes = ?, certificates = ? where username = ?");

            stmnt.setString(1,txtEmployee_bio.getText());
            stmnt.setString(2,txtEmployee_sistatikes.getText());
            stmnt.setString(3,txtEmployee_certificates.getText());
            stmnt.setString(4, (String) txtEmployee_username.getSelectedItem());
            

            stmnt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Updated");
            UpdateDB();
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }catch (SQLException ex){
            java.util.logging.Logger.getLogger(Evaluator_Edit.class.getName()).log(java.util.logging.Level.SEVERE ,null,ex);
        }
    }//GEN-LAST:event_btnEvaluator_UpdateActionPerformed

    private void Employee_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Employee_TableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel)Employee_Table.getModel();
        int SelectedRows = Employee_Table.getSelectedRow();

        txtEmployee_username.setSelectedItem(RecordTable.getValueAt(SelectedRows, 0).toString());
        txtEmployee_bio.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        txtEmployee_sistatikes.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        txtEmployee_certificates.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        
        txtEmployee_username.disable();
    }//GEN-LAST:event_Employee_TableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee_Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee_Edit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Employee_Table;
    private javax.swing.JButton btnEvaluator_Delete;
    private javax.swing.JButton btnEvaluator_Insert;
    private javax.swing.JButton btnEvaluator_Reset;
    private javax.swing.JButton btnEvaluator_Update;
    private javax.swing.JButton btnEvaluator_back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtEmployee_bio;
    private javax.swing.JTextField txtEmployee_certificates;
    private javax.swing.JTextField txtEmployee_sistatikes;
    private javax.swing.JComboBox<String> txtEmployee_username;
    // End of variables declaration//GEN-END:variables
}
